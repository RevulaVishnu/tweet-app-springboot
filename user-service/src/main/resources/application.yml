# server properties
server:
  port: 8083
# spring properties
spring:
  application:
    name: USER-SERVICE
#  main:
#    allow-bean-definition-overriding: true
  data:
    mongodb:
      url: mongodb://localhost/tweet-app
      database: tweet-app
      port: 27017
      host: localhost
      repositories:
        enables: true


#Eureka client
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

kafka:
  consumer:
    bootstrap-servers: localhost:9092
    group-id: tweetApp
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    bootstrap-servers: localhost:9092
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
    batch-size: 100000

logging:
  file:
    path: './logs/logs'
    name: ${logging.file.path}/my-app.log
  level:
    org.springframework.web: ERROR
management:
  endpoints:
    web:
      exposure:
        include: "*"